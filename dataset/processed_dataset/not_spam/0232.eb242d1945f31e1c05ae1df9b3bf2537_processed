core
java
technolog
technic
tip
view
thi
issu
as
simpl
text
septemb
number
number
in
thi
issu
welcom
to
the
core
javatm
technolog
tech
tip
septemb
number
number
here
you
ll
get
tip
on
use
core
java
technolog
and
api
such
as
those
in
java
number
platform
standard
edit
j
number
setm
use
arraylist
and
linkedlist
use
zero
length
array
these
tip
were
develop
use
java
number
sdk
standard
edit
v
number
number
thi
issu
of
the
jdc
tech
tip
is
written
by
glen
mccluskey
use
arraylist
and
linkedlist
arraylist
and
linkedlist
are
two
collect
class
use
for
store
list
of
object
refer
for
exampl
you
could
have
an
arraylist
of
string
or
a
linkedlist
of
integ
thi
tip
compar
the
perform
of
arraylist
and
linkedlist
and
offer
some
suggest
about
which
of
these
class
is
the
right
choic
in
a
given
situat
the
first
key
point
is
that
an
arraylist
is
back
by
a
primit
object
array
becaus
of
that
an
arraylist
is
much
faster
than
a
linkedlist
for
random
access
that
is
when
access
arbitrari
list
element
use
the
get
method
note
that
the
get
method
is
implement
for
linkedlist
but
it
requir
a
sequenti
scan
from
the
front
or
back
of
the
list
thi
scan
is
veri
slow
for
a
linkedlist
there
s
no
fast
way
to
access
the
nth
element
of
the
list
consid
the
follow
exampl
suppos
you
have
a
larg
list
of
sort
element
either
an
arraylist
or
a
linkedlist
suppos
too
that
you
do
a
binari
search
on
the
list
the
standard
binari
search
algorithm
start
by
check
the
search
key
against
the
valu
in
the
middl
of
the
list
if
the
middl
valu
is
too
high
then
the
upper
half
of
the
list
is
elimin
howev
if
the
middl
valu
is
too
low
then
the
lower
half
of
the
list
is
ignor
thi
process
continu
until
the
key
is
found
in
the
list
or
until
the
lower
bound
of
the
search
becom
greater
than
the
upper
bound
here
s
a
program
that
doe
a
binari
search
on
all
the
element
in
an
arraylist
or
a
linkedlist
import
java
util
public
class
listdemo
number
static
final
int
n
number
static
list
valu
make
list
of
increas
integ
valu
static
integ
val
new
integ
n
random
rn
new
random
for
int
i
number
currval
number
i
n
i
val
i
new
integ
currval
currval
rn
nextint
number
number
valu
array
aslist
val
iter
across
a
list
and
look
up
everi
valu
in
the
list
use
binari
search
static
long
timelist
list
lst
long
start
system
currenttimemilli
for
int
i
number
i
n
i
look
up
a
valu
in
the
list
use
binari
search
int
indx
collect
binarysearch
lst
valu
get
i
saniti
check
for
result
of
binari
search
if
indx
i
system
out
println
error
n
return
system
currenttimemilli
start
public
static
void
main
string
arg
do
lookup
in
an
arraylist
system
out
println
time
for
arraylist
timelist
new
arraylist
valu
do
lookup
in
a
linkedlist
system
out
println
time
for
linkedlist
timelist
new
linkedlist
valu
the
listdemo
number
program
set
up
a
list
of
sort
integ
valu
it
then
add
the
valu
to
an
arraylist
or
a
linkedlist
then
collect
binarysearch
is
use
to
search
for
each
valu
in
the
list
when
you
run
thi
program
you
should
see
a
result
that
look
someth
like
thi
time
for
arraylist
number
time
for
linkedlist
number
arraylist
is
about
number
time
faster
than
linkedlist
your
result
might
differ
depend
on
your
machin
characterist
but
you
should
see
a
distinct
differ
in
the
result
for
arraylist
as
compar
to
that
for
linkedlist
the
same
is
true
for
the
other
program
in
thi
tip
clearli
linkedlist
is
a
bad
choic
in
thi
situat
the
binari
search
algorithm
inher
use
random
access
and
linkedlist
doe
not
support
fast
random
access
the
time
to
do
a
random
access
in
a
linkedlist
is
proport
to
the
size
of
the
list
by
comparison
random
access
in
an
arraylist
ha
a
fix
time
you
can
use
the
randomaccess
marker
interfac
to
check
whether
a
list
support
fast
random
access
void
f
list
lst
if
lst
instanceof
randomaccess
support
fast
random
access
arraylist
implement
the
randomaccess
interfac
and
linkedlist
doe
not
note
that
collect
binarysearch
doe
take
advantag
of
the
randomaccess
properti
to
optim
search
do
these
result
prove
that
arraylist
is
alway
a
better
choic
not
necessarili
there
are
mani
case
where
linkedlist
doe
better
also
note
that
there
are
mani
situat
where
an
algorithm
can
be
implement
effici
for
linkedlist
an
exampl
is
revers
a
linkedlist
use
collect
revers
the
intern
algorithm
doe
thi
and
get
reason
perform
by
use
forward
and
backward
iter
let
s
look
at
anoth
exampl
suppos
you
have
a
list
of
element
and
you
do
a
lot
of
element
insert
and
delet
to
the
list
in
thi
case
linkedlist
is
the
better
choic
to
demonstr
that
consid
the
follow
worst
case
scenario
in
thi
demo
a
program
repeatedli
insert
element
at
the
begin
of
a
list
the
code
look
like
thi
import
java
util
public
class
listdemo
number
static
final
int
n
number
time
how
long
it
take
to
add
n
object
to
a
list
static
long
timelist
list
lst
long
start
system
currenttimemilli
object
obj
new
object
for
int
i
number
i
n
i
lst
add
number
obj
return
system
currenttimemilli
start
public
static
void
main
string
arg
do
time
for
arraylist
system
out
println
time
for
arraylist
timelist
new
arraylist
do
time
for
linkedlist
system
out
println
time
for
linkedlist
timelist
new
linkedlist
when
you
run
thi
program
the
result
should
look
someth
like
thi
time
for
arraylist
number
time
for
linkedlist
number
these
result
are
pretti
much
the
revers
of
the
previou
exampl
when
an
element
is
ad
to
the
begin
of
an
arraylist
all
of
the
exist
element
must
be
push
back
which
mean
a
lot
of
expens
data
movement
and
copi
by
contrast
ad
an
element
to
the
begin
of
a
linkedlist
simpli
mean
alloc
an
intern
record
for
the
element
and
then
adjust
a
coupl
of
link
ad
to
the
begin
of
a
linkedlist
ha
fix
cost
but
ad
to
the
begin
of
an
arraylist
ha
a
cost
that
s
proport
to
the
list
size
so
far
thi
tip
ha
look
at
speed
issu
but
what
about
space
let
s
look
at
some
intern
detail
of
how
arraylist
and
linkedlist
are
implement
in
java
number
sdk
standard
edit
v
number
number
these
detail
are
not
part
of
the
extern
specif
of
these
class
but
are
illustr
of
how
such
class
work
intern
the
linkedlist
class
ha
a
privat
intern
class
defin
like
thi
privat
static
class
entri
object
element
entri
next
entri
previou
each
entri
object
refer
a
list
element
along
with
the
next
and
previou
element
in
the
linkedlist
in
other
word
a
doubli
link
list
a
linkedlist
of
number
element
will
have
number
entri
object
link
togeth
referenc
the
actual
list
element
there
is
signific
space
overhead
in
a
linkedlist
structur
given
all
these
entri
object
an
arraylist
ha
a
back
object
array
to
store
the
element
thi
array
start
with
a
capac
of
number
when
the
array
need
to
grow
the
new
capac
is
comput
as
newcapac
oldcapac
number
number
number
notic
that
the
array
capac
grow
each
time
by
about
number
thi
mean
that
if
you
have
an
arraylist
with
a
larg
number
of
element
there
will
be
a
signific
amount
of
space
wast
at
the
end
thi
wast
is
intrins
to
the
way
arraylist
work
if
there
wa
no
spare
capac
the
array
would
have
to
be
realloc
for
each
new
element
and
perform
would
suffer
dramat
chang
the
growth
strategi
to
be
more
aggress
such
as
doubl
the
size
at
each
realloc
would
result
in
slightli
better
perform
but
it
would
wast
more
space
if
you
know
how
mani
element
will
be
in
an
arraylist
you
can
specifi
the
capac
to
the
constructor
you
can
also
call
the
trimtos
method
after
the
fact
to
realloc
the
intern
array
thi
get
rid
of
the
wast
space
so
far
thi
discuss
ha
assum
that
either
an
arraylist
or
a
linkedlist
is
right
for
a
given
applic
but
sometim
other
choic
make
more
sens
for
exampl
consid
the
veri
common
situat
where
you
have
a
list
of
key
valu
pair
and
you
would
like
to
retriev
a
valu
for
a
given
key
you
could
store
the
pair
in
an
n
x
number
object
array
to
find
the
right
pair
you
could
do
a
sequenti
search
on
the
key
valu
thi
approach
work
and
is
a
use
choic
for
veri
small
list
say
number
element
or
less
but
it
doesn
t
scale
to
big
list
anoth
approach
is
to
sort
the
key
valu
pair
by
ascend
key
valu
store
the
result
in
a
pair
of
arraylist
and
then
do
a
binari
search
on
the
key
list
thi
approach
also
work
and
is
veri
fast
yet
anoth
approach
is
to
not
use
a
list
structur
at
all
but
instead
use
a
map
structur
hash
tabl
in
the
form
of
a
hashmap
which
is
faster
a
binari
search
on
an
arraylist
or
a
hashmap
here
s
a
final
exampl
that
compar
these
two
import
java
util
public
class
listdemo
number
static
final
int
n
number
list
of
key
and
valu
static
list
key
static
list
valu
fill
the
key
list
with
ascend
order
key
valu
and
fill
the
valu
list
with
correspond
valu
key
static
integ
keyvec
new
integ
n
integ
valuevec
new
integ
n
random
rn
new
random
for
int
i
number
currval
number
i
n
i
keyvec
i
new
integ
currval
valuevec
i
new
integ
currval
currval
rn
nextint
number
number
key
array
aslist
keyvec
valu
array
aslist
valuevec
fill
a
map
with
key
valu
pair
static
map
map
new
hashmap
static
for
int
i
number
i
n
i
map
put
key
get
i
valu
get
i
do
binari
search
lookup
of
all
key
static
long
timelist
long
start
system
currenttimemilli
for
int
i
number
i
n
i
int
indx
collect
binarysearch
key
key
get
i
saniti
check
of
return
valu
from
binari
search
if
indx
i
system
out
println
error
n
return
system
currenttimemilli
start
do
map
lookup
of
all
key
static
long
timemap
long
start
system
currenttimemilli
for
int
i
number
i
n
i
integ
valu
integ
map
get
key
get
i
saniti
check
of
valu
return
from
map
lookup
if
valu
valu
get
i
system
out
println
error
n
return
system
currenttimemilli
start
public
static
void
main
string
arg
do
time
for
list
implement
system
out
println
list
time
timelist
do
time
for
map
implement
system
out
println
map
time
timemap
the
program
set
up
list
of
key
and
valu
and
then
use
two
differ
techniqu
to
map
key
to
valu
one
approach
use
a
binari
search
on
a
list
the
other
a
hash
tabl
when
you
run
the
listdemo
number
program
you
should
get
a
result
that
look
someth
like
thi
arraylist
time
number
hashmap
time
number
in
thi
exampl
n
ha
a
valu
of
number
approxim
log
number
n
number
comparison
are
requir
in
an
averag
success
binari
search
so
each
binari
search
lookup
in
the
arraylist
will
take
about
number
comparison
by
contrast
a
properli
implement
hash
tabl
typic
requir
onli
number
number
comparison
so
you
should
expect
the
hash
tabl
to
be
faster
in
thi
case
howev
binari
search
is
still
use
for
exampl
you
might
want
to
do
a
lookup
in
a
sort
list
and
then
find
key
that
are
close
in
valu
to
the
key
use
for
the
lookup
do
thi
is
easi
with
binari
search
but
imposs
in
a
hash
tabl
key
in
a
hash
tabl
are
store
in
appar
random
order
also
if
you
are
concern
with
worst
case
perform
the
binari
search
algorithm
offer
a
much
stronger
perform
guarante
than
a
hash
tabl
scheme
you
might
also
consid
use
treemap
for
do
lookup
in
sort
collect
of
key
valu
pair
let
s
summar
the
key
point
present
in
thi
tip
append
element
to
the
end
of
a
list
ha
a
fix
averag
cost
for
both
arraylist
and
linkedlist
for
arraylist
append
typic
involv
set
an
intern
array
locat
to
the
element
refer
but
occasion
result
in
the
array
be
realloc
for
linkedlist
the
cost
is
uniform
and
involv
alloc
an
intern
entri
object
insert
or
delet
element
in
the
middl
of
an
arraylist
impli
that
the
rest
of
the
list
must
be
move
insert
or
delet
element
in
the
middl
of
a
linkedlist
ha
fix
cost
a
linkedlist
doe
not
support
effici
random
access
an
arraylist
ha
space
overhead
in
the
form
of
reserv
capac
at
the
end
of
the
list
a
linkedlist
ha
signific
space
overhead
per
element
sometim
a
map
structur
is
a
better
choic
than
a
list
for
more
inform
about
use
arraylist
and
linkedlist
see
section
number
number
list
and
section
number
number
map
and
sortedmap
in
the
javatm
program
languag
third
edit
by
arnold
gosl
and
holm
also
see
the
collect
trail
in
the
java
tutori
third
edit
back
to
top
use
zero
length
array
suppos
that
you
are
write
a
java
applic
that
involv
some
sort
of
data
filter
you
have
some
raw
data
that
you
want
to
clean
up
and
process
in
variou
way
one
of
the
method
you
ve
written
take
an
array
of
integ
along
with
minimum
and
maximum
valu
the
method
goe
through
the
array
and
elimin
outlier
that
is
valu
that
are
too
small
or
too
big
the
result
of
the
filter
process
is
a
new
array
of
clean
up
data
how
could
you
implement
thi
kind
of
filter
method
here
s
one
approach
import
java
util
public
class
zerodemo
number
filter
input
array
and
throw
away
valu
that
are
less
than
minval
or
greater
than
maxval
static
int
filterdata
int
indata
int
minval
int
maxval
check
paramet
for
error
if
indata
null
throw
new
nullpointerexcept
indata
is
null
if
maxval
minval
throw
new
illegalargumentexcept
maxval
minval
count
number
of
valid
valu
in
input
array
int
validcnt
number
for
int
i
number
i
indata
length
i
if
indata
i
minval
indata
i
maxval
validcnt
if
no
valid
valu
return
null
if
validcnt
number
return
null
copi
valid
valu
to
new
array
and
return
it
int
outdata
new
int
validcnt
for
int
i
number
j
number
i
indata
length
i
if
indata
i
minval
indata
i
maxval
outdata
j
indata
i
return
outdata
public
static
void
main
string
arg
set
up
test
array
of
integ
int
indata
new
int
number
number
number
number
number
filter
out
valu
not
in
the
rang
number
number
int
outdata
number
filterdata
indata
number
number
for
int
i
number
i
outdata
number
length
i
system
out
println
outdata
number
i
filter
out
valu
not
in
the
rang
number
number
int
outdata
number
filterdata
indata
number
number
for
int
i
number
i
outdata
number
length
i
system
out
println
outdata
number
i
the
filterdata
method
doe
two
scan
of
the
input
array
the
first
scan
count
the
number
of
valid
data
valu
then
the
method
alloc
a
new
array
of
the
appropri
size
and
copi
the
good
valu
to
it
if
there
are
no
good
valu
the
method
return
a
null
valu
for
the
array
refer
the
result
of
run
the
zerodemo
number
program
is
number
number
number
except
in
thread
main
java
lang
nullpointerexcept
at
zerodemo
number
main
zerodemo
number
java
number
the
problem
with
thi
program
is
a
rather
basic
one
the
second
call
of
filterdata
return
a
null
valu
and
the
program
fail
to
take
thi
possibl
into
account
a
better
approach
in
thi
exampl
would
be
to
comment
out
the
block
of
code
that
test
for
the
possibl
of
no
valid
data
valu
if
validcnt
number
return
null
when
there
is
no
valid
data
the
code
will
fall
through
to
the
next
line
where
a
zero
length
array
is
alloc
int
outdata
new
int
number
thi
is
perfectli
legal
java
usag
the
represent
of
java
array
includ
the
length
of
the
array
and
it
s
therefor
possibl
to
tell
if
an
array
ha
zero
length
for
the
zerodemo
number
exampl
if
you
anticip
that
validcnt
will
often
be
zero
that
is
data
filter
will
often
elimin
all
valu
from
the
input
then
you
could
optim
away
the
second
input
scan
by
ad
code
like
thi
int
outdata
new
int
validcnt
if
validcnt
number
return
outdata
note
that
usag
such
as
int
outdata
new
int
is
also
legal
to
initi
an
array
with
a
zero
length
set
of
integ
constant
in
gener
it
s
best
not
to
return
null
from
a
method
that
return
an
array
type
alway
return
an
array
even
if
the
array
ha
zero
length
greatli
improv
the
gener
of
algorithm
if
you
anticip
that
your
method
will
often
return
zero
length
array
you
might
be
concern
about
the
perform
implic
of
alloc
mani
such
array
in
thi
case
you
can
alloc
a
singl
array
and
alway
return
the
same
one
as
follow
privat
static
final
int
zero
length
array
new
int
number
thi
array
is
immut
it
can
t
be
chang
and
can
be
share
throughout
your
applic
there
s
anoth
way
that
zero
length
array
are
use
as
illustr
in
the
follow
exampl
import
java
util
public
class
zerodemo
number
public
static
void
main
string
arg
set
up
arraylist
and
add
string
to
it
list
stringlist
new
arraylist
stringlist
add
string
number
stringlist
add
string
number
stringlist
add
string
number
convert
to
string
array
string
out
string
stringlist
toarray
new
string
number
for
int
i
number
i
out
length
i
system
out
println
out
i
the
result
of
run
the
zerodemo
number
program
is
string
number
string
number
string
number
the
zerodemo
number
program
set
up
an
arraylist
and
add
three
string
to
it
then
the
program
call
toarray
to
get
a
string
array
of
the
three
element
in
the
arraylist
in
thi
exampl
the
argument
to
toarray
is
new
string
number
thi
argument
serv
a
coupl
of
purpos
first
if
you
have
a
string
array
that
s
big
enough
to
hold
the
element
of
the
arraylist
you
can
specifi
it
as
the
argument
to
toarray
the
method
will
use
the
string
array
but
if
your
array
is
not
big
enough
then
the
toarray
method
alloc
an
array
to
return
the
element
it
use
the
type
of
the
array
that
wa
pass
in
to
determin
the
type
of
the
alloc
array
arraylist
store
it
element
refer
in
an
object
array
the
toarray
method
need
to
be
told
if
there
is
some
other
type
such
as
string
to
be
use
for
return
the
array
of
element
the
method
use
reflect
java
lang
reflect
array
newinst
to
creat
an
array
of
the
appropri
type
for
more
inform
about
use
zero
length
array
see
item
number
return
zero
length
array
not
null
in
effect
java
program
languag
guid
by
joshua
bloch
back
to
top
import
pleas
read
our
term
of
use
privaci
and
licens
polici
httpaddr
httpaddr
httpaddr
comment
send
your
feedback
on
the
javatm
technolog
fundament
newslett
to
emailaddr
subscrib
to
the
follow
newslett
for
the
latest
inform
about
technolog
and
product
in
other
java
platform
enterpris
java
technolog
tech
tip
get
tip
on
use
enterpris
java
technolog
and
api
such
as
those
in
the
java
number
platform
enterpris
edit
j
number
eetm
wireless
develop
tech
tip
get
tip
on
use
wireless
java
technolog
and
api
such
as
those
in
the
java
number
platform
micro
edit
j
number
metm
to
subscrib
to
these
and
other
jdc
public
go
to
the
jdc
newslett
and
public
page
choos
the
newslett
you
want
to
subscrib
to
and
click
updat
to
unsubscrib
go
to
the
subscript
page
uncheck
the
appropri
checkbox
and
click
updat
archiv
you
ll
find
the
core
java
technolog
tech
tip
archiv
at
httpaddr
copyright
number
sun
microsystem
inc
all
right
reserv
number
san
antonio
road
palo
alto
california
number
usa
sun
sun
microsystem
java
java
develop
connect
j
number
se
j
number
ee
and
j
number
me
are
trademark
or
regist
trademark
of
sun
microsystem
inc
in
the
unit
state
and
other
countri
pleas
send
me
newslett
in
text
pleas
unsubscrib
me
from
thi
newslett